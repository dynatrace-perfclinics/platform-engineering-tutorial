{"version":11,"variables":[{"key":"team","type":"code","input":"import { settingsObjectsClient } from \"@dynatrace-sdk/client-classic-environment-v2\";\n\n/*\n* This will run JavaScript in the DYNATRACE\n* serverless environment.\n* To generate variable options return string array.\n*/\nexport default async function () {\n    const data = await settingsObjectsClient.getEffectiveSettingsValues({\n    schemaIds: \"builtin:ownership.teams\",\n    scope: \"environment\",\n    fields: \"objectId,value\",\n    pageSize: 50,\n  });\n\n  var teamNames = new Array(data.totalCount+1)\n  teamNames[0] = \"No Team\"\n  for (var teamIx=0;teamIx<data.totalCount;teamIx++) {\n    teamNames[teamIx+1]=data.items[teamIx].value.name;\n  }\n\n  return teamNames;\n}","multiple":false},{"key":"entitytype","type":"csv","input":"cloud_application, service, http_check, process_group,process_group_instance","multiple":false}],"tiles":{"1":{"type":"markdown","title":"","content":"# Get an overview of entities with and without ownership\nThis dashboard allows you to get an overview of entities that are assigned to a team or that are not yet assigned to any team.\nSelect your team (or \"No Team) and the entity type you are interested:\n- **No Team**: Will show all entities that currently do not have a dt.owner defined\n- **TEAM**: Will show you all entities this team has ownership for"},"2":{"type":"code","title":"Entities with selected Team Ownership","input":"/*\n* This function will run in the DYNATRACE JavaScript runtime.\n* For information visit https://dt-url.net/functions-help\n*/\nimport { queryExecutionClient } from '@dynatrace-sdk/client-query';\n\nasync function getAllEntities() {\n  const timeout = 60;\n  const query = 'fetch dt.entity.' + $entitytype + ' | fieldsAdd hasOwnerTags=(isNotNull(tags) and indexOf(toString(tags),\"owner\")>=0),tags' \n  \n  const response = await queryExecutionClient.queryExecute({ body: { query, requestTimeoutMilliseconds: timeout * 1000, fetchTimeoutSeconds: timeout  } });\n  return response.result.records;\n}\n\nasync function getAllEntitiesForTeam(team) {\n  const timeout = 60;\n  const query = 'fetch dt.entity.' + $entitytype + ' | filter (isNotNull(tags) and indexOf(toString(tags),\"owner:' + team + '\")>=0) | fieldsAdd tags' \n  console.log(query)\n  \n  const response = await queryExecutionClient.queryExecute({ body: { query, requestTimeoutMilliseconds: timeout * 1000, fetchTimeoutSeconds: timeout  } });\n  return response.result.records;\n}\n\nasync function getAllEntitiesWitoutTeam(team) {\n  const timeout = 60;\n  const query = 'fetch dt.entity.' + $entitytype + ' | filter (isNull(tags) or indexOf(toString(tags),\"owner:\")==1)' \n  \n  const response = await queryExecutionClient.queryExecute({ body: { query, requestTimeoutMilliseconds: timeout * 1000, fetchTimeoutSeconds: timeout  } });\n  return response.result.records;\n}\n\n/**\n * entities: array of entities with id and array of tags\n * team: name of team that we find the match for\n */\nasync function getEntitiesOwnedByTeam(entities,team) {\n\n  console.log(\"Searching for entities owned by: \" + team)\n  \n  var ownedEntities = new Array();\n  \n  // iterate through all entities\n  for (var entityIx=0;entityIx<entities.length;entityIx++) {\n    // iterate through all tags and see if we find a matching team\n    var entity=entities[entityIx]\n    for (var tagIx=0;tagIx<entity.tags.length;tagIx++) {\n      var tagToCheck = entity.tags[tagIx]\n      console.log(\"Checking tag: \" + tagToCheck)\n      if ((tagToCheck.indexOf(\"dt.owner\") == 0) && (tagToCheck.indexOf(team) > 0)) {\n        console.log(\"Found tag: \" + tagToCheck)\n        ownedEntities.push(entity)\n      }\n    }\n  }\n\n  return ownedEntities;\n}\n\nexport default async function () { \n  if ($team == \"No Team\" || $team == null) {\n    console.log(\"No Team: \" + $team)\n    return await getAllEntitiesWitoutTeam()\n  } else {\n    console.log(\"Team: \" + $team)\n    return await getAllEntitiesForTeam($team)\n  }\n}","visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute"}},"singleValue":{"showLabel":true,"label":"","autoscale":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{"[\"entity.name\"]":358,"[\"id\"]":306,"[\"tags\"]":600}}}}},"layouts":{"1":{"x":0,"y":0,"w":23,"h":3},"2":{"x":0,"y":3,"w":22,"h":4}}}